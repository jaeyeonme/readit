plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.8' apply false
    id 'io.spring.dependency-management' version '1.1.0'
    id 'jacoco'
}


allprojects { // 모든 프로젝트에 반영되는 부분
    repositories {
        mavenCentral()
    }
}

def javaProjects = [ // Java 로 작성된 소스코드에 대한 공통작업 선언
                     project(":readit-api"),
                     project(":readit-domain"),
                     project(":readit-common"),
]

configure(javaProjects) {
    apply plugin: "java"
    apply plugin: "jacoco"
    apply plugin: "org.springframework.boot"
    apply plugin: "io.spring.dependency-management"

    group = "${projectGroup}"
    version = "${projectVersion}-${new Date().format('yyyyMMddHHmmss')}"

    sourceCompatibility = 17
    targetCompatibility = 17

    dependencies {
        compileOnly("org.projectlombok:lombok")
        annotationProcessor("org.projectlombok:lombok")
        testImplementation("org.springframework.boot:spring-boot-starter-test")
    }

    jacoco {
        toolVersion = "0.8.8"
    }

    test {
        reports {
            junitXml.required = true
            html.required = true
        }
        jacoco {
            enabled = true
            destinationFile = file("${buildDir}/jacoco/jacoco.exec")
        }
        finalizedBy jacocoTestReport

        useJUnitPlatform { //jUnit5 수행
            excludeTags("integrationTest")
        }
    }

    /**
     * @see <a href="https://docs.gradle.org/current/userguide/tutorial_using_tasks.html">Build Script Basics</a>
     */
    tasks.register("integrationTest", Test) {
        useJUnitPlatform {
            includeTags("integration")
        }
        finalizedBy "jacocoTestReport"
    }

    jacocoTestReport {
        reports {
            xml.required = true
            xml.destination file("${project.buildDir}/customJacocoReportDir/test/jacocoTestReport.xml") // 위치 지정
            html.setDestination(file("${buildDir}/reports/jacoco/html"))
        }
        getExecutionData().setFrom(files("${buildDir}/jacoco/jacoco.exec"))
    }
}
