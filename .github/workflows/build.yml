name: AWS CI/CD with Spring Boot

on:
  pull_request:
    branches: [ "main", "dev" ]
    paths:
      - "src/**"
  push:
    branches:
      - main

jobs:
  checkstyle:
    runs-on: ubuntu-latest

    steps:
      - name: Setting Checkout
        uses: actions/checkout@v2

      - name: Checkstyle
        uses: dbelyaev/action-checkstyle@v0.7.5
        with:
          checkstyle_config: ${{ github.workspace }}/config/checkstyle/naver-checkstyle-rules.xml
          github_token: ${{ secrets.github_token }}
          reporter: github-check
          level: warning

  build_and_coverage:
    needs: checkstyle
    runs-on: ubuntu-latest

    steps:
      - name: Setting Checkout
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Cache Gradle dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make application.yml
        run: |
          cd ./src/main
          mkdir -p resources
          cd ./resources
          touch ./application.yml
          echo "${{ secrets.APPLICATION }}" > ./application.yml
        shell: bash

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build

      - name: Make zip file
        run: |
          mkdir deploy
          cp ./appspec.yml ./deploy/
          cp ./Dockerfile ./deploy/
          cp ./scripts/*.sh ./deploy/
          cp ./build/libs/*.jar ./deploy/
          zip -r -qq -j ./blog.zip ./deploy/

      - name: Upload ZIP
        uses: actions/upload-artifact@v2
        with:
          name: blog.zip
          path: ./blog.zip

      - name: Add coverage to PR
        uses: madrapps/jacoco-report@v1.3
        with:
          paths: ${{ github.workspace }}/build/customJacocoReportDir/test/jacocoTestReport.xml
          token: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    needs: build_and_coverage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Download ZIP
        uses: actions/download-artifact@v2
        with:
          name: blog.zip
          path: ./

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.REGISTRY }}

      - name: Build and Push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/readit:${{ github.sha }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Upload to S3
        run: |
          aws s3 cp \
            --region ap-northeast-2 \
            ./blog.zip s3://reddit-spring

      - name: Code Deploy
        run: aws deploy create-deployment --application-name test-app
          --deployment-config-name CodeDeployDefault.OneAtATime
          --deployment-group-name test-app
          --s3-location bucket=tcat-spring,bundleType=zip,key=blog.zip
