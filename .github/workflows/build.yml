name: Java CI with Gradle

on:
  pull_request:
    branches: [ "main", "dev" ]
    paths:
      - "src/**"
  push:
    branches:
      - main

jobs:
  checkstyle:
    runs-on: ubuntu-latest

    steps:
      - name: Setting Checkout
        uses: actions/checkout@v2

      - name: Checkstyle
        uses: dbelyaev/action-checkstyle@v0.7.5
        with:
          checkstyle_config: ${{ github.workspace }}/config/checkstyle/naver-checkstyle-rules.xml
          github_token: ${{ secrets.github_token }}
          reporter: github-check
          level: warning

  build_and_coverage:
    needs: checkstyle
    runs-on: ubuntu-latest

    steps:
      - name: Setting Checkout
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"

      # Add your sensitive file setup here if you need
      - run: touch ./src/main/resources/application-secret.properties
      - run: echo "${{ secrets.APPLICATION_SECRET }}" > ./src/main/resources/application-secret.properties
      - run: cat ./src/main/resources/application-secret.properties

      - name: Cache Gradle dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build with Gradle
        uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
        with:
          arguments: build

      - name: Add coverage to PR
        uses: madrapps/jacoco-report@v1.3
        with:
          paths: ${{ github.workspace }}/build/customJacocoReportDir/test/jacocoTestReport.xml
          token: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    needs: build_and_coverage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.REGISTRY }}

      - name: Build and Push Docker image
        uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
        with:
          arguments: jib --image=ghcr.io/${{ github.repository_owner }}/simple-blog:${{ github.sha }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Upload Jar to S3
        run: aws s3 cp --region ap-northeast-2 ./simple-blog.zip s3://$S3_BUCKET_NAME/simple-blog.zip

      # Add your AWS CodeDeploy steps here if you need
